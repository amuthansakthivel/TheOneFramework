name: run mobile automated tests

on:
  workflow_dispatch:
    inputs:
      mobile-os:
        description: 'android or ios'
        required: false
        default: 'android'
        type: choice
        options:
          - 'android'
          - 'ios'
      test-tags-to-include:
        description: 'smoke or regression'
        required: false
        default: 'smoke'
        type: choice
        options:
          - 'smoke'
          - 'regression'
      environment:
        description: 'staging or dev'
        required: false
        default: 'staging'
        type: choice
        options:
          - 'dev'
          - 'staging'

jobs:
  mobile-tests:
    runs-on: macos-latest
    timeout-minutes: 45
    steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
            cache: maven

        - uses: actions/setup-node@v3
          with:
            node-version: '18'
        - run: |
            npm install -g appium
            appium -v
            appium driver install uiautomator2
            appium driver install xcuitest
            appium &>/dev/null &

        - name: AVD cache
          uses: actions/cache@v3
          id: avd-cache
          with:
            path: |
              ~/.android/avd/*
              ~/.android/adb*
            key: avd-25

        - name: create AVD and generate snapshot for caching
          if: steps.avd-cache.outputs.cache-hit != 'true'
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: 25
            force-avd-creation: false
            emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            disable-animations: false
            script: echo "Generated AVD snapshot for caching."

        - name: run android tests
          uses: reactivecircus/android-emulator-runner@v2
          if: ${{ inputs.mobile-os == 'android' }}
          with:
            api-level: 25
            force-avd-creation: false
            emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            disable-animations: true
            script: mvn clean test -Dselenide.browser=com.tmb.provider.mobile.local.AndroidProvider -Dgroups="${{ inputs.test-tags-to-include }} & mobile" -Denvironment=${{ inputs.environment }}

        - name: run ios tests
          if: ${{ inputs.mobile-os == 'ios' }}
          run: |
            mvn clean test -Dselenide.browser=com.tmb.provider.mobile.local.IosAppProvider -Dgroups="${{ inputs.test-tags-to-include }} & mobile" -Denvironment=${{ inputs.environment }}

        - uses: vimtor/action-zip@v1
          if: always()
          with:
            files: ./target/allure-results/
            dest: ./allure-results.zip

        - uses: actions/upload-artifact@v4
          if: always()
          with:
            name: allure-results
            path: ./allure-results.zip